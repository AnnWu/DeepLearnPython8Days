# 类 
类用来描述具有相同属性和方法（行为）的对象的集合

#对象 
通过类定义的数据结构实例，包含数据成员（类变量和实例变量）和方法
实例化：创建一个类的实例，对象

# 创建类
class ClassName :
	'类的帮助信息' #类文档字符串
	类变量  #类体由类成员，方法，数据属性组成
	def __init__(self,paramers):
	def 函数(self,...)
python类定义的方法分：实例方法，类方法以及静态方法
区别：实例方法一般都以self作为第一个参数，必须和具体的对象实例进行绑定才能访问。
类方法以cls 作为第一个参数，cls表示类本身，定义时使用@classmethod,那么通过cls引用的必须是类对象的属性和方法，类方法操作类属性
静态方法不需要默认的任何参数，定义时使用@staticmethod  静态方法中不需要额外定义参数，因此在静态方法中引用类属性的话，必须通过类对象来引用。
## 访问对象的属性  .
## Python内置类属性
__dict__ : 类的属性（包含一个字典，由类的数据成员组成）
__doc__ : 类的文档字符串
__name__ : 类名
__module__ : 类定义所在的模块（类的全名是'__main__.className'）
__bases__ : 类的所有父类构成元素

# Python 对象销毁（垃圾回收）
在python中内部记录着所有使用中的对象各有多少引用。
一个内部跟踪变量，称为一个引用计数器
当对象被创建时，就创建了一个引用计数，当这个对象不再需要时，它的引用计数变为0时，它被垃圾回收。回收不是立即的，由解释器在适当的时机将垃圾对象占用的内存空间回收。

# 类的继承

#定义类的私有成员变量
  使用__attriname定义私有变量,但是还是有办法访问的得到。
